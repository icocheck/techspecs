@startuml
state "Data Check & Cognitive Work" as cognition {
  state "..." as prev

  [*] --> prev
  prev --> [*]
}

state "Validation" as validation {
  state "Lottery for validators" as lottery
  state "Gathering validators" as gathering
  state "Validating" as validating
  state "Disclosing Veto" as disclosing
  state "Counting votes" as counting
  state "Fineing validators" as fineing
  state "Waiting appeals" as waiting
  state "Killing workers" as killing
  state "Delivering results, payouts & mining" as delivering

  lottery: – All validating nodes participate
  lottery: – Chances are proportional to stake and reputation

  gathering: — Awaits congirmations from
  gathering:   all selected validtors
  gathering: – Timeout leads to penalty
  gathering:   and validator replacements

  delivering: – Can have "partial validation" status
  delivering: – In this case QA stake is partially repaid to the Client
  delivering: – Payouts and cognitive mining

  validating: – Limited by time
  validating: – Timeout initiates new
  validating:   lottery to replace delayed
  validating:   validators with a new ones
  validating:   and leads to a fine

  disclosing: – Limited by time
  disclosing: – Timeout leads to fine
  disclosing:   validators are not replaced

  fineing: – Validators are fined
  fineing:   loosing reputation and stakes

  counting: – Defines True and Faulty Nodes

  waiting: – Wait for initial appeals
  waiting:   with some given timeout time
  
  killing: – Removing stakes/reputation from
  killing:   the Worker Nodes reported Faulty

  prev --> lottery: all results\nare delivered
  lottery --> gathering
  lottery --> delivering: not enough\nvalidators
  gathering --> lottery: some validators\nrejected or\ntimed out
  gathering --> validating: all validators\nresponded
  gathering --> delivering: timeout\nlimit\nreached
  validating --> disclosing: all validators\nsumitted results
  validating --> lottery: for timed out\nvalidators
  disclosing --> counting: validators\nsubmitted keys
  disclosing --> fineing: some validators\ntimed out
  fineing --> counting
  counting --> delivering: no Faulty\nnodes
  counting --> waiting: Faulty nodes\nfound
  waiting --> killing: No appeals\nwere submitted
  killing --> delivering
  delivering --> [*]
}

state "Closed Arbitration" as closed {
  state "..." as more1
}

state "Public Arbitration" as public {
  state "..." as more2
}

closed --> public
waiting --> closed: appeal was submitted
closed --> delivering: upon\narbitration\ncompletion
public --> delivering: upon\narbitration\ncompletion
@enduml
