@startuml
state "Data Check & Cognitive Work" as cognition {
  state "..." as prev
}

state "Validation" as validation {
  state "Lottery for validators" as lottery
  state "Gathering validators" as wait
  state "Validating" as validating
  state "Disclosing Veto" as disclosing
  state "Counting votes" as counting
  state "Fineing validators" as fineing
  state "Delivering results" as delivering

  lottery: – All validating nodes participate
  lottery: – Chances are proportional to stake and reputation

  wait: — Awaits congirmations from
  wait:   all selected validtors
  wait: – Timeout leads to penalty
  wait:   and validator replacements

  delivering: – Can have "partial validation" status
  delivering: – In this case QA stake is partially repaid to the Client

  validating: – Limited by time
  validating: – Timeout initiates new
  validating:   lottery to replace delayed
  validating:   validators with a new ones
  validating:   and leads to a fine

  disclosing: – Limited by time
  disclosing: – Timeout leads to fine
  disclosing:   validators are not replaced

  fineing: – Validators are fined
  fineing:   loosing reputation and stakes

  counting: – Defines True and Faulty Nodes

  cognition --> lottery: all results\nare delivered
  lottery --> wait
  lottery --> delivering: not enough\nvalidators
  wait --> lottery: some validators\nrejected or\ntimed out
  wait --> validating: all validators\nresponded
  wait --> delivering: timeout\nlimit\nreached
  validating --> disclosing: all validators\nsumitted results
  validating --> lottery: for timed out\nvalidators
  disclosing --> counting: validators\nsubmitted keys
  disclosing --> fineing: some validators\ntimed out
  fineing --> counting
  counting --> delivering: no Faulty\nnodes
  delivering --> [*]
}

state "Arbitration" as arbitration {
  state "..." as more
}

counting --> more: Faulty nodes\nfound
@enduml
